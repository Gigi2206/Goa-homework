#1) მოხმარებელს შემოატანინეთ რიცხვი, შემდეგ კი დაუბეჭდეთ ეს რიცხვი დადებითია, უარყოფითი თუ ნეიტურალი ანუ ნული. შემდეგ კომენტარებით ახსენით რა გასნხვავებაა if-სა და elif-ს შორის რატომ არ შეიძლება ზოგერ elif-ს ნაცვლად if-ის გამოყენება


# მომხმარებელს შემოაქვს რიცხვი
try:
    რიცხვი = float(input("შეიყვანეთ რიცხვი: "))

    # ვამოწმებთ რიცხვი დადებითია, უარყოფითი თუ ნულია
    if რიცხვი > 0:
        print(f"{რიცხვი} დადებითია.")
    elif რიცხვი < 0:
        print(f"{რიცხვი} უარყოფითია.")
    else:
        print(f"{რიცხვი} ნეიტრალურია (ნული).")

except ValueError:
    print("არასწორი შეყვანა. გთხოვთ შეიყვანოთ რიცხვი.")

# განსხვავება if-სა და elif-ს შორის:
# if: if ბრძანება გამოიყენება პირობის შესამოწმებლად. თუ პირობა ჭეშმარიტია (True),
#     შემდეგ ბლოკში მოთავსებული კოდი შესრულდება. if ბლოკი შეიძლება იყოს პროგრამაში
#     რამდენჯერმე გამოყენებული და თითოეული მათგანი დამოუკიდებლად შემოწმდება.

# elif: elif (else if-ის შემოკლებული ფორმა) გამოიყენება მაშინ, როდესაც გვინდა შევამოწმოთ
#       რამდენიმე პირობა თანმიმდევრულად. elif ბლოკი სრულდება მხოლოდ იმ შემთხვევაში,
#       თუ წინა if ან elif პირობა იყო მცდარი (False), ხოლო მიმდინარე elif პირობა
#       ჭეშმარიტია (True). როგორც კი ერთ-ერთი elif პირობა შესრულდება, დანარჩენი
#       elif და else ბლოკები გამოტოვებული იქნება.

# რატომ არ შეიძლება ზოგჯერ elif-ის ნაცვლად if-ის გამოყენება:
# თუ რამდენიმე if ბლოკს გამოვიყენებთ, მაშინ თითოეული პირობა დამოუკიდებლად შემოწმდება.
# ამან შეიძლება გამოიწვიოს არასასურველი შედეგები, როდესაც მხოლოდ ერთი პირობა უნდა
# შესრულდეს.

# მაგალითად, ზემოთ მოცემულ კოდში, თუ რიცხვი დადებითია, მხოლოდ პირველი if ბლოკი
# შესრულდება. elif-ის გამოყენების გარეშე, თუ რიცხვი დადებითია, პირველი if შეამოწმებს
# და დაბეჭდავს, რომ ის დადებითია. შემდეგ მეორე if შეამოწმებს, არის თუ არა ის უარყოფითი
# (რაც არ არის) და მესამე if შეამოწმებს, არის თუ არა ის ნული (რაც ასევე არ არის).
# elif-ის გამოყენება უზრუნველყოფს, რომ მხოლოდ ერთი შესაბამისი ბლოკი შესრულდება.

# სხვა სიტყვებით რომ ვთქვათ, elif გამოიყენება ურთიერთგამომრიცხავი პირობებისთვის.
# როდესაც ვიცით, რომ მხოლოდ ერთი კონკრეტული შემთხვევა შეიძლება იყოს ჭეშმარიტი,
# elif გვეხმარება კოდის უფრო ეფექტურად და ლოგიკურად დაწერაში.