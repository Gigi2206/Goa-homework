"""3) ახსენით რა არის ალგორითმი (ტექსტურ ფაილში), ჩამოწერეთ ალგორითმის წარმოდგენის გზები და მათი თვისებები. თქვენ რომელს ანიჭებთ უპირატესობას და რატომ?"""

# 1. ბუნებრივი ენა (აღწერა კომენტარებში)
# დავუშვათ, გვინდა დავწეროთ ალგორითმი, რომელიც იპოვის ორი რიცხვის ჯამს.
#
# ნაბიჯი 1: მივიღოთ პირველი რიცხვი.
# ნაბიჯი 2: მივიღოთ მეორე რიცხვი.
# ნაბიჯი 3: შევკრიბოთ პირველი და მეორე რიცხვი.
# ნაბიჯი 4: გამოვაქვეყნოთ ჯამი.

# პითონში ეს შეიძლება ასე გამოიყურებოდეს:
def sum_numbers(num1, num2):
  """
  ეს ფუნქცია აჯამებს ორ რიცხვს.
  """
  total = num1 + num2
  return total

number1 = 5
number2 = 10
result = sum_numbers(number1, number2)
print(f"ორი რიცხვის ჯამი არის: {result}")

# 2. ფსევდოკოდი (აღწერა კომენტარებში, პითონის მსგავსი სტრუქტურით)
# ფუნქცია ჯამი(რიცხვი1, რიცხვი2):
#   ჯამი = რიცხვი1 + რიცხვი2
#   დაბრუნება ჯამი
#
# მთავარი პროგრამა:
#   რიცხვი_პირველი = 5
#   რიცხვი_მეორე = 10
#   შედეგი = ჯამი(რიცხვი_პირველი, რიცხვი_მეორე)
#   დაბეჭდე "ორი რიცხვის ჯამი არის:", შედეგი

# პითონში ეს უკვე რეალიზებულია ზემოთ მოცემულ ფუნქციაში sum_numbers.

# 3. ფლოუჩარტი (ამას ტექსტურად აქ ვერ წარმოვადგენთ, მაგრამ პრინციპი ასეთია):
#
# [დაწყება] --> (შეყვანა: რიცხვი1, რიცხვი2) --> [ჯამი = რიცხვი1 + რიცხვი2] --> (გამოყვანა: ჯამი) --> [დასასრული]
#
# სადაც:
# [] - პროცესი
# () - შეყვანა/გამოყვანა
# --> - ნაკადის მიმართულება

# 4. პროგრამირების ენა (პითონი)
# ეს არის ალგორითმის უშუალოდ პითონის კოდში რეალიზაცია, რაც ზემოთ მოცემულ მაგალითებში უკვე ჩანს.

def calculate_average(numbers):
  """
  ეს ფუნქცია ითვლის რიცხვების სიის საშუალო არითმეტიკულს.
  """
  if not numbers:
    return 0  # თუ სია ცარიელია, დააბრუნე 0
  total = sum(numbers)
  average = total / len(numbers)
  return average

data = [1, 2, 3, 4, 5]
avg_result = calculate_average(data)
print(f"რიცხვების სიის საშუალო არის: {avg_result}")

def is_prime(number):
  """
  ეს ფუნქცია ამოწმებს, არის თუ არა რიცხვი მარტივი.
  """
  if number <= 1:
    return False
  for i in range(2, int(number**0.5) + 1):
    if number % i == 0:
      return False
  return True

num_to_check = 17
if is_prime(num_to_check):
  print(f"{num_to_check} არის მარტივი რიცხვი")
else:
  print(f"{num_to_check} არ არის მარტივი რიცხვი")












